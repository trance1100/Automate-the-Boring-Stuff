1.Why are functions advantageous to have in your programs?

They help simplify repeated task
Make code easy to modify
Make code more easy to maintain & Identify problems

2.When does the code in a function execute: when the function is 
defined or when the function is called?

When a function is called

3.What statement creates a function?

the "def" keyword.

4.What is the difference between a function and a function call?

A function is a sequence of steps; a function call is called when you want to execute it in your code.

5.How many global scopes are there in a Python program? How many local 
scopes?

There is only one global scope and multiple local scopes, depending on functions.

6.What happens to variables in a local scope when the function call returns?

They're brutally murdered. 
I mean, they dissapear.
From a lower level perspective, they pop from the stack or wahetver.

7.What is a return value? Can a return value be part of an expression?

Is used to return a value from a function.
Return values can be a part of an expression, which will return the result of that expression.

8.If a function does not have a return statement, what is the return value 
of a call to that function?

It's None

9.How can you force a variable in a function to refer to the global variable?

globa
10.What is the data type of None?

11.What does the import areallyourpetsnamederic statement do? 

12.If you had a function named bacon() in a module named spam, how
would you call it after importing spam?

13.How can you prevent a program from crashing when it gets an error?

14.What goes in the try clause? What goes in the except clause?
